Problem statement
You're given a string 'S' consisting of "{", "}", "(", ")", "[" and "]" .

Return true if the given string 'S' is balanced, else return false.

For example:
'S' = "{}()".

There is always an opening brace before a closing brace i.e. '{' before '}', '(' before ').
So the 'S' is Balanced.
Detailed explanation ( Input/output format, Notes, Images )
Sample Input 1 :
[()]{}{[()()]()}
Sample Output 1 :
Balanced

SOLUTION:-
bool isValidParenthesis(string s)
{
    stack<char> st;
    for(int i=0;i<s.length();i++){
        char c=s[i];
        if(c=='(' || c=='{' || c=='['){
            st.push(c);
        } else {
            if (st.empty() || c == ')' && st.top() != '(' ||
                c == '}' && st.top() != '{' || c == ']' && st.top() != '[') {
              return false;
            }
            st.pop();
        }
    }
    return st.empty();
}
