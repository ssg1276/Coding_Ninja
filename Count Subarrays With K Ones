Problem statement
You are given a binary array 'arr' of length 'N' and an integer 'k'. Return the number of subarrays having the count of 1's equal to ‘k’.

Example :
Let the array 'arr' be: [1, 0, 1].
Let ‘k’ be: 1

Then the subarrays having the number of ones equal to ‘k’ will be: [1], [1,0], [0,1], [1].

SOLUTION:-
 int ans(vector<int>& nums, int goal){
        if(goal<0) return 0;
        
        int n=nums.size();
        int l=0,r=0,sum=0,ct=0;
       while(r<n){
        sum+=nums[r];
        while(sum>goal){
            sum-=nums[l];
            l=l+1;
        }
        ct=ct+(r-l+1);
        r=r+1;
       }
       return ct;
    }

int subarrayWithSum(vector<int> &arr, int k) {
    // Write your code here.
    return ans(arr,k)-ans(arr,k-1);
}
