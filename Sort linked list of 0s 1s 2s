Problem statement
Given a linked list of 'N' nodes, where each node has an integer value that can be 0, 1, or 2. You need to sort the linked list in non-decreasing order and the return the head of the sorted list.

Example:
Given linked list is 1 -> 0 -> 2 -> 1 -> 2. 
The sorted list for the given linked list will be 0 -> 1 -> 1 -> 2 -> 2.

SOLUTION:-
/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/

Node* sortList(Node *head){
    // Write your code here.
   Node* zeroHead=new Node(-1);
   Node* firstHead=new Node(-1);
   Node* secondHead=new Node(-1);

   Node* temp=head;
   Node* tempZero=zeroHead;
   Node* tempFirst=firstHead;
   Node* tempSecond=secondHead;

   while(temp!=NULL){
       if(temp->data==0){
           tempZero->next=temp;
           tempZero=temp;
       }
       else if(temp->data==1){
           tempFirst->next=temp;
           tempFirst=temp;
       }
       else{
           tempSecond->next=temp;
           tempSecond=temp;
       }
       temp=temp->next;
   }

   tempZero->next= firstHead->next;
   tempFirst->next=secondHead->next;
    tempSecond->next=NULL;
   return zeroHead->next;
}
